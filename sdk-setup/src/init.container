#!/bin/bash
#
# Copyright (C) 2021 Jolla Ltd.
# Contact: http://jolla.com/
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# - Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# - Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in
#   the documentation and/or other materials provided with the
#   distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

set -o nounset

NOTE="Autogenerated by $0. Do not edit!"

usage() {
    cat <<END
usage: $0

Initialize SDK Build Engine container.
END
}

fatal() {
    echo "Fatal: $*" >&2
}

host_is_windows() [[ -e /dev/fuse ]]

init() (
    exec &>/var/log/systemboot.log

    # Make systemd-detect-virt work
    mkdir -p /run/systemd
    echo "$container" >/run/systemd/container

    cat >/etc/profile.d/sdk-vm.sh <<END
# $NOTE
$(declare -p $(compgen -v SAILFISH_SDK_))
END

    cat >/usr/bin/sdk-shutdown <<END
#!/bin/bash
# $NOTE
sudo kill 1
END

    cat >/etc/dbus-1/system.d/sdk-docker.conf <<END
<!-- $NOTE -->
<!DOCTYPE busconfig PUBLIC "-//freedesktop//DTD D-BUS Bus Configuration 1.0//EN"
 "http://www.freedesktop.org/standards/dbus/1.0/busconfig.dtd">
<busconfig>

    <listen>tcp:host=0.0.0.0,port=777</listen>

</busconfig>
END

    mkdir -p /var/run/dbus
    dbus-daemon --system

    . /etc/mersdk.env.systemd

    if host_is_windows && ! [[ -e /etc/mersdk/share/workspace1.no-dynexec ]]; then
        mkdir -p "$SAILFISH_SDK_SRC1_MOUNT_POINT"
        mkdir -p "$SAILFISH_SDK_SRC1_MOUNT_POINT.raw"
        mount --move "$SAILFISH_SDK_SRC1_MOUNT_POINT" "$SAILFISH_SDK_SRC1_MOUNT_POINT.raw"
        dynexecfs -o "uid=$UID_MERSDK,gid=$GID_MERSDK,allow_other,nonempty,$DYNEXECFS_FLAGS,root=$SAILFISH_SDK_SRC1_MOUNT_POINT.raw" "$SAILFISH_SDK_SRC1_MOUNT_POINT"
    fi

    /usr/libexec/sdk-setup/dnat-emulators

    oneshot --late

    . /etc/ssh/ssh-env.conf

    echo "Startup complete" >&2
    exec /usr/sbin/sshd -D $SSHD_PARAMETERS
)

main() {
    while (($# > 0)); do
        case $1 in
            -h|--help)
                usage
                return
                ;;
            *)
                fatal "Unexpected argument: $1"
                return 1
                ;;
        esac
        shift
    done

    if (($$ != 1)); then
        fatal "Must be run with PID 1"
        return 1
    fi

    init
}

main "$@"
